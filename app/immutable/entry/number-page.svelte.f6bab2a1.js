import{S as C,i as w,s as O,m,p as f,a as z,q as _,g as V,r as $,h as P,u as d,v as g,w as S,x as y,f as R}from"../chunks/index.52ca7fcd.js";import{C as q}from"../chunks/isSymbol.3680740e.js";import{C as B,n as c}from"../chunks/methods.8b783021.js";import{g as T}from"../chunks/clsx.m.cae8f9de.js";function D(s){let e,a,n,o;const u=[{inputLabel:b,inputValueStore:s[1],inputSize:h,inputTypeStore:s[0],inputOptions:s[2]}];let r={};for(let t=0;t<u.length;t+=1)r=m(r,u[t]);e=new q({props:r});const i=[{outputRows:s[4],inputValueStore:s[1],inputTypeStore:s[0],preCalc:s[3]}];let l={};for(let t=0;t<i.length;t+=1)l=m(l,i[t]);return n=new B({props:l}),{c(){f(e.$$.fragment),a=z(),f(n.$$.fragment)},l(t){_(e.$$.fragment,t),a=V(t),_(n.$$.fragment,t)},m(t,p){$(e,t,p),P(t,a,p),$(n,t,p),o=!0},p(t,[p]){const I=p&7?d(u,[{inputLabel:b,inputValueStore:t[1],inputSize:h,inputTypeStore:t[0],inputOptions:t[2]}]):{};e.$set(I);const v=p&27?d(i,[{outputRows:t[4],inputValueStore:t[1],inputTypeStore:t[0],preCalc:t[3]}]):{};n.$set(v)},i(t){o||(g(e.$$.fragment,t),g(n.$$.fragment,t),o=!0)},o(t){S(e.$$.fragment,t),S(n.$$.fragment,t),o=!1},d(t){y(e,t),t&&R(a),y(n,t)}}}const b="Number in",h=1;function H(s){const e=T("numberInputType","10"),a=T("numberInput",""),n=[{value:"10",text:"Decimal"},{value:"2",text:"Binary"},{value:"8",text:"Octal"},{value:"16",text:"Hexadecimal"}],o=(r,i)=>({2:"0b",8:"0o",10:"",16:"0x"}[i]||"")+r,u=[{cols:[{title:"Binary",size:2,method:c.bin,sendInputType:"2"}]},{cols:[{title:"Octal",size:1,method:c.oct,sendInputType:"8"}]},{cols:[{title:"Decimal",size:1,method:c.dec,sendInputType:"10"}]},{cols:[{title:"Hexadecimal",size:1,method:c.hex,sendInputType:"16"}]}];return[e,a,n,o,u]}class k extends C{constructor(e){super(),w(this,e,H,D,O,{})}}export{k as default};
